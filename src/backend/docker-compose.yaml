version: "3.8"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    restart: always

  rabbitmq:
    image: rabbitmq:3.11-management
    environment:
      RABBITMQ_CONFIG_FILE: "rabbitmq.conf"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  secrethound:
    build: .
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      LOG_LEVEL: INFO
      SECRET_KEY: secret
      ALGORITHM: HS256
      FRONTEND_URL: ${FRONTEND_URL}
      ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      RELOAD: false
      PORT: 8000
      TYPEORM_SYNC: true
    depends_on:
      - db
    restart: always

  user-auth:
    build:
      context: ./v2
      dockerfile: ./apps/user-auth/Dockerfile
    environment:
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: password
      BCRYPT_SALT_ROUNDS: 10
      SECRET_KEY: secret
      TYPEORM_SYNC: false
      FRONTEND_URL: ${FRONTEND_URL}
      LICENSE_SERVER_VALIDATE_URL: ${LICENSE_SERVER_VALIDATE_URL}
    depends_on:
      - db
    restart: always

  licenses:
    build:
      context: ./v2
      dockerfile: ./apps/licenses/Dockerfile
    environment:
      PORT: 3001
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: password
      BCRYPT_SALT_ROUNDS: 10
      SECRET_KEY: secret
      TYPEORM_SYNC: false
      BREVO_API_KEY: ""
      EMAIL_USER: ""
    depends_on:
      - db
    restart: always

  assets:
    build:
      context: ./v2
      dockerfile: ./apps/assets/Dockerfile
    environment:
      PORT: 3002
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: password
      BCRYPT_SALT_ROUNDS: 10
      SECRET_KEY: secret
      TYPEORM_SYNC: false
      FRONTEND_URL: ${FRONTEND_URL}
      LICENSE_SERVER_VALIDATE_URL: ${LICENSE_SERVER_VALIDATE_URL}
      ENABLE_ASSET_WORKER: false
      RABBITMQ_URL: "amqp://rabbitmq:5672"
    depends_on:
      - db
      - rabbitmq
      - secrethound
      - user-auth
    restart: always

  asset-worker:
    build:
      context: ./v2
      dockerfile: ./apps/assets/Dockerfile
    environment:
      PORT: 3003
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: password
      BCRYPT_SALT_ROUNDS: 10
      SECRET_KEY: secret
      TYPEORM_SYNC: false
      FRONTEND_URL: ${FRONTEND_URL}
      LICENSE_SERVER_VALIDATE_URL: ${LICENSE_SERVER_VALIDATE_URL}
      ENABLE_ASSET_WORKER: true
      RABBITMQ_URL: "amqp://rabbitmq:5672"
    depends_on:
      - db
      - rabbitmq
      - secrethound
      - user-auth
    restart: always

  vulnerability:
    build:
      context: ./v2
      dockerfile: ./apps/vulnerability/Dockerfile
    environment:
      PORT: 3004
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: password
      BCRYPT_SALT_ROUNDS: 10
      SECRET_KEY: secret
      TYPEORM_SYNC: false
      FRONTEND_URL: ${FRONTEND_URL}
      LICENSE_SERVER_VALIDATE_URL: ${LICENSE_SERVER_VALIDATE_URL}
      RABBITMQ_URL: "amqp://rabbitmq:5672"
    depends_on:
      - db
      - rabbitmq
      - secrethound
      - user-auth
      - assets
    restart: always

  vulnerability-worker:
    build:
      context: ./v2
      dockerfile: ./apps/vulnerability/Dockerfile
    environment:
      PORT: 3005
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: password
      BCRYPT_SALT_ROUNDS: 10
      SECRET_KEY: secret
      TYPEORM_SYNC: false
      FRONTEND_URL: ${FRONTEND_URL}
      LICENSE_SERVER_VALIDATE_URL: ${LICENSE_SERVER_VALIDATE_URL}
      WORKER_ENABLE: true
      RABBITMQ_URL: "amqp://rabbitmq:5672"
    depends_on:
      - db
      - rabbitmq
      - secrethound
      - user-auth
      - assets
    restart: always
    ports:
      - "3020:3000"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - secrethound
      - user-auth
      - licenses
      - assets
      - vulnerability
    restart: always

volumes:
  rabbitmq_data:
