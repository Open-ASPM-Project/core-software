import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  CreateDateColumn,
  UpdateDateColumn,
  OneToMany,
  Generated,
  JoinColumn,
  ManyToOne,
} from 'typeorm';
import { ScanStatus, ScanTriggerType } from '@firewall-backend/enums';
import { Vulnerability } from './vulnerability.entity';
import { Asset } from '../../assets/assets/asset.entity';

@Entity({ name: 'vulnerability_v2_scans' })
export class VulnerabilityScan {
  @PrimaryGeneratedColumn()
  id!: number;

  @Column({ unique: true })
  @Generated('uuid')
  uuid!: string;

  @Column({
    type: 'enum',
    enum: ScanStatus,
    default: ScanStatus.PENDING,
  })
  status!: ScanStatus;

  @Column({
    name: 'scan_type',
    type: 'enum',
    enum: ScanTriggerType,
    default: ScanTriggerType.ASSET_ADDED,
  })
  scanType!: ScanTriggerType;

  @Column({ name: 'scheduler_scan_id', nullable: true })
  schedulerScanId?: number;

  @Column({ name: 'user_id', nullable: true })
  userId?: number;

  @Column({ name: 'asset_id', nullable: true })
  assetId?: number;

  @ManyToOne(() => Asset, { eager: false, nullable: false })
  @JoinColumn({ name: 'asset_id', referencedColumnName: 'id' })
  asset!: Asset;

  @CreateDateColumn({ name: 'created_at' })
  createdAt!: Date;

  @UpdateDateColumn({ name: 'updated_at' })
  updatedAt!: Date;

  @OneToMany(() => Vulnerability, (vul) => vul.scan)
  vulnerabilities!: Vulnerability[];
}
