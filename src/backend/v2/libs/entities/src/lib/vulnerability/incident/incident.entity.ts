import {
  Entity,
  Column,
  PrimaryGeneratedColumn,
  CreateDateColumn,
  UpdateDateColumn,
  OneToOne,
  JoinColumn,
  OneToMany,
} from 'typeorm';
import { Comments } from './comments.entity';
import { Activity } from './activity.entity';
import {
  IncidentClosedBy,
  IncidentStatusEnum,
  IncidentTypeEnum,
} from '@firewall-backend/enums';
import { Vulnerability } from '../vulnerability/vulnerability.entity';

@Entity('incidents')
export class Incident {
  @PrimaryGeneratedColumn('increment', { name: 'id' })
  id!: number;

  @Column({ nullable: false, name: 'name' })
  name!: string;

  @Column({
    type: 'enum',
    enum: IncidentTypeEnum,
    nullable: false,
    name: 'type',
  })
  type!: IncidentTypeEnum;

  @Column({
    type: 'enum',
    enum: IncidentStatusEnum,
    default: IncidentStatusEnum.OPEN,
    nullable: false,
    name: 'status',
  })
  status!: IncidentStatusEnum;

  @CreateDateColumn({ name: 'created_at' })
  createdAt!: Date;

  @UpdateDateColumn({ name: 'updated_at' })
  updatedAt!: Date;

  @Column({
    type: 'enum',
    enum: IncidentClosedBy,
    nullable: true,
    name: 'closed_by',
  })
  closedBy!: IncidentClosedBy;

  @Column({ name: 'vulnerability_vm_id', nullable: true })
  vulnerabilityVmId!: number;

  @OneToOne(() => Vulnerability)
  @JoinColumn({ name: 'vulnerability_vm_id' })
  vulnerability!: Vulnerability;

  @OneToMany(() => Comments, (comment) => comment.incident, { cascade: true })
  comments!: Comments[];

  @OneToMany(() => Activity, (activity) => activity.incident, { cascade: true })
  activities!: Activity[];
}
