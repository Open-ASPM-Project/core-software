import { Module } from '@nestjs/common';
import { ConfigModule } from '@nestjs/config';
import { LoggerModule } from 'nestjs-pino';
import { VulnerabilityWorkerModule } from './worker/vulnerability.worker.modules';
import { TypeOrmModule } from '@nestjs/typeorm';
import { VulnerabilityModule } from './vulnerability/vulnerability.modules';
import { AppController } from './app.controller';
import { ConfigurationModule } from '@firewall-backend/configuration';
import { ScheduleModule } from '@nestjs/schedule';
import { AssetAllowlistModule } from './asset-allowlist/asset-allowlist.module';
import { AssetAllowlist } from './asset-allowlist/entities/asset-allowlist.entity';
import { IncidentModule } from './incident/incident.module';
import { TechDetectionModule } from './tech-detect/tech-detection.module';
import { TechDetection } from './tech-detect/entities/tech-detection.entity';
import {
  Vulnerability,
  Configuration,
  VulnerabilityScan,
  Incident,
  Comments,
  Activity,
  Asset,
  AssetToSource,
  Source,
  User,
  Schedule,
  ScheduleRun,
  AssetGroup,
  AssetToGroup,
  AssetScreenshot,
  AssetScan,
  Ec2ToSecurityGroup,
  Ec2ToWebapp,
} from '@firewall-backend/entities';

@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true,
    }),
    LoggerModule.forRoot(),
    TypeOrmModule.forRoot({
      type: 'postgres',
      host: process.env.DB_HOST,
      port: +process.env.DB_PORT,
      username: process.env.DB_USER,
      password: process.env.DB_PASS,
      database: process.env.DB_NAME,
      entities: [
        Asset,
        AssetToSource,
        AssetScan,
        Source,
        Schedule,
        ScheduleRun,
        AssetGroup,
        AssetToGroup,
        AssetScreenshot,
        Ec2ToSecurityGroup,
        Ec2ToWebapp,
        Vulnerability,
        Configuration,
        VulnerabilityScan,
        AssetAllowlist,
        Incident,
        Comments,
        Activity,
        TechDetection,
        User,
      ],
      synchronize: process.env.TYPEORM_SYNC === 'true',
      logging: true,
    }),
    ConfigurationModule,
    VulnerabilityModule,
    AssetAllowlistModule,
    IncidentModule,
    ...(process.env.WORKER_ENABLE === 'true'
      ? [VulnerabilityWorkerModule]
      : []),
    ScheduleModule.forRoot(),
    TechDetectionModule,
  ],
  controllers: [AppController],
})
export class AppModule {}
