import { Module } from '@nestjs/common';
import { VulnerabilityService } from './vulnerability.service';
import { TypeOrmModule } from '@nestjs/typeorm';
import { VulnerabilityController } from './vulnerability.controller';
import { VulnerabilityTemplatesCronService } from './vulnerability.cron';
import { MessagePubSubModule } from '@firewall-backend/message-pub-sub';
import { defaultModuleImports } from '@firewall-backend/utils';
import { IncidentModule } from '../incident/incident.module';
import { Vulnerability, VulnerabilityScan } from '@firewall-backend/entities';
import { ConfigurationModule } from '@firewall-backend/configuration';
@Module({
  imports: [
    ...defaultModuleImports(),
    TypeOrmModule.forFeature([Vulnerability, VulnerabilityScan]),
    MessagePubSubModule.forRoot({
      // adapter: 'kafka',
      // kafkaBrokers: ['localhost:9092'],
      // kafkaGroupId: 'vulnerability-group',
      // kafkaClientId: 'vulnerability-client',

      // adapter: 'mqtt',
      // mqttBrokerUrl: 'mqtt://localhost:1883',
      // mqttOptions: {
      //   username: 'test',
      //   password: 'secret'
      // },

      adapter: 'rabbitmq',
      rabbitUrl: process.env.RABBITMQ_URL,
      rabbitExchange: 'vulnerability-exchange',
      rabbitQueueName: 'vulnerability-queue',
    }),
    IncidentModule,
    ConfigurationModule,
  ],
  controllers: [VulnerabilityController],
  providers: [VulnerabilityService, VulnerabilityTemplatesCronService],
  exports: [VulnerabilityService],
})
export class VulnerabilityModule {}
