import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  CreateDateColumn,
  UpdateDateColumn,
  ManyToOne,
  JoinColumn,
  OneToMany,
  Generated,
} from 'typeorm';
import { AssetType, Severity } from '@firewall-backend/enums';
import {
  Asset,
  Configuration,
  Vulnerability,
  VulnerabilityScan,
} from '@firewall-backend/entities';

@Entity('tech_detections')
export class TechDetection {
  @PrimaryGeneratedColumn()
  id: number;

  @Column({ unique: true })
  @Generated('uuid')
  uuid: string;

  @Column({ name: 'template_id' })
  templateId: string;

  @Column({ name: 'template_path', nullable: true, type: 'text' })
  templatePath?: string;

  @Column({ name: 'template_encoded', nullable: true, type: 'text' })
  templateEncoded?: string;

  @Column({ name: 'info_name', nullable: true })
  infoName?: string;

  @Column({
    name: 'info_severity',
    type: 'enum',
    enum: Severity,
    nullable: true,
  })
  infoSeverity?: Severity;

  @Column({ name: 'info_description', type: 'text', nullable: true })
  infoDescription?: string;

  @Column({ name: 'info_impact', type: 'text', nullable: true })
  infoImpact?: string;

  @Column({ name: 'info_remediation', type: 'text', nullable: true })
  infoRemediation?: string;

  @Column({ nullable: true })
  type?: string;

  @Column({ nullable: true })
  host?: string;

  @Column({ nullable: true })
  port?: string;

  @Column({ nullable: true })
  scheme?: string;

  @Column({ nullable: true })
  url?: string;

  @Column({ name: 'matched_at', nullable: true })
  matchedAt?: string;

  @Column({ type: 'text', nullable: true })
  request?: string;

  @Column({ type: 'text', nullable: true })
  response?: string;

  @Column({ nullable: true })
  ip?: string;

  @Column({ type: 'timestamptz', nullable: true })
  timestamp?: Date;

  @Column({ name: 'curl_command', type: 'text', nullable: true })
  curlCommand?: string;

  @Column({ name: 'matcher_status', nullable: true })
  matcherStatus?: boolean;

  @Column({ name: 'all_payload', type: 'jsonb', nullable: true })
  allPayload?: Record<string, unknown>;

  @CreateDateColumn({ name: 'created_at' })
  createdAt: Date;

  @UpdateDateColumn({ name: 'updated_at' })
  updatedAt: Date;

  @Column({ name: 'configuration_id', nullable: true })
  configurationId: number;

  @ManyToOne(() => Configuration, (config) => config.vulnerabilities, {
    nullable: true,
    onDelete: 'SET NULL',
  })
  @JoinColumn({ name: 'configuration_id' })
  configuration?: Configuration;

  // TODO: Asset Link, Keep fields here for faster aggreagtions
  @Column({ name: 'asset_id', nullable: false })
  assetId: number;

  @ManyToOne(() => Asset, { eager: false, nullable: false })
  @JoinColumn({ name: 'asset_id', referencedColumnName: 'id' })
  asset: Asset;

  @Column({ name: 'asset_name', nullable: false })
  assetName: string;

  @Column({
    name: 'asset_type',
    type: 'enum',
    enum: AssetType,
    nullable: false,
  })
  assetType: AssetType;

  // scan
  // In VulnerabilityScan entity:
  @OneToMany(() => Vulnerability, (vul) => vul.scan)
  vulnerabilities: Vulnerability[];

  @ManyToOne(() => VulnerabilityScan, (scan) => scan.vulnerabilities, {
    nullable: true,
    onDelete: 'CASCADE',
  })
  @JoinColumn({ name: 'scan_id' })
  scan?: VulnerabilityScan;

  @Column({ name: 'scan_id', nullable: true })
  scanId?: number;
}
